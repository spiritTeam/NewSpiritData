<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd"
>
  <!-- 读取数据库配置信息 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="fileEncoding" value="UTF-8"/>
    <property name="locations">
      <list merge="default">
        <value>/WEB-INF/config.properties</value>
      </list>
    </property>
  </bean>
  <!-- 以下配置类加载 -->
  <bean id="gConfig" class="com.spiritdata.GlobalConfig" scope="singleton">
    <property name="loginsession" value="${_TIMEOUT.loginSession}"/>
  </bean>
  <bean id="serverIdentify" class="com.spiritdata.commons.model.Owner" scope="singleton">
    <property name="ownerType" value="${_SI.serverType}"/>
    <property name="ownerId" value="${_SI.serverId}"/>
    <property name="ownerName" value="${_SI.serverName}"/>
  </bean>
  <bean id="smsConfig" class="com.spiritdata.plugins.sms.ali.AliSmsConfig" scope="singleton">
    <property name="accessKeyId" value="${_SMS.ali.accessKeyId}"/>
    <property name="accessKeySecret" value="${_SMS.ali.accessKeySecret}"/>
    <property name="signName" value="${_SMS.ali.signName}"/>
    <property name="templateCode" value="${_SMS.ali.templateCode}"/>
  </bean>

  <!-- 正式库 -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="false">
    <property name="driverClassName" value="${_DB.jdbc.mysql.driverClassName}"/>
    <property name="url" value="${_DB.main.jdbc.mysql.url}"/>
    <property name="username" value="${_DB.main.jdbc.mysql.username}"/>
    <property name="password" value="${_DB.main.jdbc.mysql.password}"/>
    <property name="initialSize" value="${_DB.pool.initialSize}"/>
    <property name="maxActive" value="${_DB.pool.maxActive}"/>
    <property name="maxWait" value="${_DB.pool.maxWait}"/>
    <property name="poolPreparedStatements" value="${_DB.pool.poolPreparedStatements}"/>
    <property name="maxOpenPreparedStatements" value="${_DB.pool.maxOpenPreparedStatements}"/>
    <property name="testOnBorrow" value="${_DB.pool.testOnBorrow}"/>
    <property name="validationQuery" value="select 1 from dual"/>
  </bean>
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <bean id="sqlSessionFactory" class="com.spiritdata.framework.ext.spring.mybatis.MySqlSessionFactoryBean">
    <property name="configLocations">
      <list merge="default">
        <value>classpath*:mybatisConfig/frameworkMybatis.xml</value>
        <value>classpath*:mybatisConfig/*.mappers.cfg.xml</value>
      </list>
    </property>
    <property name="databaseType" value="MySql"/>
    <property name="dataSource" ref="dataSource"/>
    <property name="transactionFactory">
      <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
    </property>
  </bean>
  <bean id="defaultDAO" class="com.spiritdata.framework.core.dao.mybatis.MybatisDAO" scope="prototype" init-method="initialize">
    <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
  </bean>

  <!-- Redis连接池配置 -->
  <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="${_REDIS.pool.maxTotal}"/>
    <property name="maxIdle" value="${_REDIS.pool.maxIdle}"/>
    <property name="maxWaitMillis" value="${_REDIS.pool.maxWaitMillis}"/>
    <property name="testOnBorrow" value="${_REDIS.pool.testOnBorrow}"/>
    <property name="testOnReturn" value="${_REDIS.pool.testOnReturn}"/>
  </bean>
  <!-- Redis连接配置 -->
  <bean id="mainRedis" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="hostName" value="${_REDIS.main.host}"/>
    <property name="port" value="${_REDIS.main.port}"/>
    <property name="password" value="${_REDIS.main.password}"/>
    <property name="poolConfig" ref="redisPoolConfig"/>
  </bean>

  <!-- 以下为UGA框架所需配置 -->
  <!--Uga用户服务：平台 -->
  <bean id="ugaUserService"      class="com.spiritdata.passport.UGA.service.UserService"/>
  <!--Uga用户权限服务：平台 -->
  <bean id="ugaAuthorityService" class="com.spiritdata.passport.UGA.service.AuthorityService"/>

  <!-- 平台缓存池-->
  <bean id="cachePool" class=" com.spiritdata.framework.core.cache.CachePool">
    <property name="caches">
      <map>
      </map>
    </property>
  </bean>
  <!-- 以下为web环境Session加载的定义 -->
  <!-- session加载器外壳 -->
  <bean id="sessionLoaderShell" class="com.spiritdata.framework.core.web.SessionLoaderShell">
    <property name="sessionLoaderList">
      <list>
      </list>
    </property>
  </bean>
</beans>